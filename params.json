{"name":"jquery-html5-image-uploader","tagline":"A minimalistic HTML5 image uploader for use with JQuery","body":"### Installation\r\n\r\n**Note:** There is a fully functional example (example.html) already included that utilizes PHP for handling the server-side post.\r\n\r\n1. Pop the contents of the repo into your web-accessible document root.\r\n2. Make sure you end up with an *uploads* folder with the appropriate write permissions.\r\n3. Insert the following lines into the header:\r\n\r\n    ```html\r\n    <link rel=\"stylesheet\" href=\"css/style.css\" />\r\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"js/code.js\"></script>\r\n    ```\r\n4. Place the following code where you'd like the uploader interface to appear on your page:\r\n\r\n    ```html\r\n    <div class=\"filedrag\" style=\"width: 500px;\">\r\n      <label class=\"filedrag-filename\"></label>\r\n      <img class=\"filedrag-preview\" src=\"/img/placeholder.gif\">\r\n      <div class=\"filedrag-droparea\">drop image (or click)</div>\r\n      <div class=\"filedrag-progress\"></div>\r\n      <input type=\"file\" class=\"filedrag-input\" id=\"file-input\" name=\"file-input\">\r\n    </div>\r\n    ```\r\n\r\n5. Initialize the uploader:\r\n\r\n    ```javascript\r\n    $(function () {\r\n      initUploaders('post_handler.php');\r\n    });\r\n    ```\r\n    \r\n6. Implement server-side post handling. Here's an example of how this is achieved in PHP:\r\n\r\n    ```php\r\n    <?php\r\n    \r\n    $filename = (isset($_SERVER['HTTP_X_FILENAME']) ? $_SERVER['HTTP_X_FILENAME'] : false);\r\n    $file = file_get_contents('php://input');\r\n    $type = \"image/\" . $parameters['filetype'];\r\n    \r\n    if(file_put_contents(__DIR__ . '/uploads/' . $filename, $file)) {\r\n      echo json_encode(array('success' => 1, 'error' => 0));\r\n    }\r\n    else { echo json_encode(array('success' => 0, 'error' => 'error writing file')); }\r\n    ```\r\n    \r\n### Usage\r\n\r\n1. Click on, or drag an image into, the dotted area to start the upload process. A preview will be visible while the image uploads.\r\n2. The image will be placed into the uploads folder.\r\n\r\n### Browser Compatibility\r\n\r\nIE10+, Firefox 4+, Safari 5+, Chrome 7+\r\n\r\n### Configuration Options\r\n\r\n*...are fairly limited at this point.*\r\n\r\nYou can wire in a custom callback, to be called once the image has successfully uploaded, an example of which can be found in the included example. It looks like this:\r\n\r\n```javascript\r\n//Custom callback example\r\nfunction responseCallback(response) {\r\n  console.log(response);\r\n}\r\n\r\n$(function () {\r\n  initUploaders('post_handler.php', 'responseCallback');\r\n});\r\n```\r\n\r\n### Contact\r\n\r\n- Christopher Lewis (chris@bluehousegroup.com)\r\n- github.com/lewsid","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}